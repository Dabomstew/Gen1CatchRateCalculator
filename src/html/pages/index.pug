extends ../includes/layout
include ../includes/bootstrap_mixins

prepend pageStyles
  - var pageTitle = "Gen 1 Catch Rates"

append pageContent
  div(class=css.bootstrap.containerFluid)
    -
      const pokeballs = require("./src/data/pokeballs.json");
      const pokedex = require("./src/data/pokedex.json").sort((a, b) => {
        return a["name"].localeCompare(b["name"]);
      });
      const statuseffects = require("./src/data/statuseffects.json");
    form(onsubmit="return false;")
      div(class=css.bootstrap.formRow)
        div(class=[css.bootstrap.colMd, css.bootstrap.formGroup])
          label(for="game") Game
          select#game(class=css.bootstrap.formControl aria-describedby="gameHelp")
            option(value="RB") Red/Blue
            option(value="Y") Yellow
          small#gameHelp(class=[css.bootstrap.formText, css.bootstrap.textMuted]) The game you're playing
        div(class=[css.bootstrap.colMd, css.bootstrap.formGroup])
          label(for="ball") Poke Ball Type
          select#ball(class=css.bootstrap.formControl aria-describedby="ballHelp")
            each ballData in pokeballs
              option(value!=ballData)=ballData.ballName
          small#ballHelp(class=[css.bootstrap.formText, css.bootstrap.textMuted]) The poke ball you want to use
        div(class=[css.bootstrap.colMd, css.bootstrap.formGroup])
          label(for="level") Encounter Level
          input#level(class=css.bootstrap.formControl type="number" aria-describedby="levelHelp" value=6 min=2 max=100)
          small#levelHelp(class=[css.bootstrap.formText, css.bootstrap.textMuted]) The level of the Pokemon you want to catch 1-100
      div(class=css.bootstrap.formRow)
        div(class=[css.bootstrap.colMd, css.bootstrap.formGroup])
          label(for="species") Encounter Species
          select#species(class=css.bootstrap.formControl aria-describedby="speciesHelp" style="text-transform: capitalize;")
            each pokemon in pokedex
              option(value!=pokemon)=pokemon.name.toLowerCase()
          small#speciesHelp(class=[css.bootstrap.formText, css.bootstrap.textMuted]) Which pokemon you're encountering
        div(class=[css.bootstrap.colMd, css.bootstrap.formGroup])
          label(for="status") Status Effect
          select#status(class=css.bootstrap.formControl aria-describedby="statusHelp" style="text-transform: capitalize;")
            each statusModifier, statusLabel in statuseffects
              option(value=statusModifier)=statusLabel
          small#statusHelp(class=[css.bootstrap.formText, css.bootstrap.textMuted]) Status effect if any
        div(class=[css.bootstrap.colMd, css.bootstrap.formGroup])
          label(for="hpRange") % of Max HP
          input#hpRange(class=css.bootstrap.formControlRange type="range" min="1" max="100" value="100")
      div(class=css.bootstrap.formRow)
        div(class=[css.bootstrap.colMd, css.bootstrap.formGroup])
          button(class=[css.bootstrap.btn, css.bootstrap.btnPrimary] type="button")
            span(class=[css.bootstrap.spinnerBorder, css.bootstrap.spinnerBorderSm, css.bootstrap.dNone] role="status" aria-hidden="true")
            span(class=css.bootstrap.srOnly) Loading...
            |  Check Catch Rate
      div(class=css.bootstrap.formRow)
        .actualRateGroup(class=[css.bootstrap.colMd, css.bootstrap.formGroup])
          p Actual Catch Chance
          p(class='rate')
          +progressBar("actualRate")
      div(class=css.bootstrap.formRow)
        .intendedRateGroup(class=[css.bootstrap.colMd, css.bootstrap.formGroup])
          p Intended Catch Chance
          p(class='rate')
          +progressBar("intendedRate")
