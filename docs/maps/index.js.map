{"version":3,"sources":["index.js"],"names":["gameSpecificCycleCounts","RB","Y","gameRoll2Counts","roll2Counts","$","data","actualRateBar","intendedRateBar","loadingSpinner","setRateBar","progressElement","percent","parseFloat","toFixed","find","html","css","attr","className","getJsonValue","$element","JSON","parse","val","getIntValue","parseInt","on","removeClass","pokemon","game","includes","name","catchRate","ballIndex","ball","level","currentHPPercent","status","ballName","Promise","all","Array","map","x","i","hpDV","maxHP","baseHP","curHP","hpFactor","ballFactor","currentHPModifier","Math","min","catchRateData","reroll1Count","reroll2Count","roll2Count","resolve","reject","catchRateWorker","Worker","onmessage","e","postMessage","createCatchRateWorker","then","results","actualRate","intendedRate","forEach","result","addClass","this","value","max"],"mappings":"AAAA,MAAMA,EAA0B,CAC5BC,GAAI,CAAC,IAAK,KACVC,EAAG,CAAC,IAAK,MAEPC,EAAkB,CACpBF,GAAI,EACJC,EAAG,KAEDE,EAAcC,EAAE,gBAAgBC,KAAK,eAC3C,IAAIC,EAAgBF,EAAE,oBAClBG,EAAkBH,EAAE,sBACpBI,EAAiBJ,EAAE,mBAEvB,SAASK,EAAWC,EAAiBC,GACjCA,EAAUC,WAAWD,GAASE,QAAQ,GACtCH,EAAgBI,KAAK,UAAUC,KAAQJ,EAAH,KACpCD,EAAgBI,KAAK,iBAAiBE,IAAI,QAAYL,EAAH,KAAeM,KAAK,gBAAiBN,GAAS,GAAGO,UAAY,iBAAgBP,GAAW,GAAK,aAAe,aAGnK,SAASQ,EAAaC,GAClB,OAAOC,KAAKC,MAAMF,EAASG,OAG/B,SAASC,EAAYJ,GACjB,OAAOK,SAASL,EAASG,OAG7BnB,EAAE,eAAesB,GAAG,SAAS,WACzBlB,EAAemB,YAAY,UAE3B,IAAIC,EAAUT,EAAaf,EAAE,aACzByB,EAAOzB,EAAE,SAASmB,MACT,OAATM,GACI,CAAC,YAAa,aAAaC,SAASF,EAAQG,QAC5CH,EAAQI,UAAY,IAG5B,IAIIC,EAJAC,EAAOf,EAAaf,EAAE,UACtB+B,EAAQX,EAAYpB,EAAE,WACtBgC,EAAmBZ,EAAYpB,EAAE,aACjCiC,EAASjC,EAAE,WAAWmB,MAGtBU,EADkB,cAAlBC,EAAKI,SACO,EACa,eAAlBJ,EAAKI,SACA,EAEA,EA8BhBC,QAAQC,IAAI,IAAIC,MAAM,KAAKC,IAAI,CAACC,EAAGC,IA3BnC,SAA+BC,GAC3B,IAAIC,GAAoC,GAAzBlB,EAAQmB,OAASF,GAAYV,EAAQ,KAAQ,GAAKA,EAAQ,GACrEa,EAASF,GAASV,EAAmB,MAAS,EAC9Ca,EAAsB,IAARH,EAAeZ,EAAKgB,YAAe,EACjDC,EAAqBH,EAAQ,GAAM,EACnCG,EAAoB,IACpBF,EAAYA,EAAWE,GAAsB,GAEjDF,EAAWG,KAAKC,IAAIJ,EAAU,KAC9B,IAAIK,EAAgB,CAChBtB,UAAcJ,EAAQI,UACtBE,KAASA,EACTG,OAAWA,EACXY,SAAaA,EACbM,aAAiBxD,EAAwB8B,GAAM,GAC/C2B,aAAiBzD,EAAwB8B,GAAM,GAC/C4B,WAAevD,EAAgB2B,GAAQ1B,EAAY8B,GAAWa,EAAM,GAAGK,EAAkB,GAAK,IAAiB,KAAXd,GAAiB,IAAiB,KAAXA,IAE/H,OAAO,IAAIE,QAAQ,CAACmB,EAASC,KACzB,MAAMC,EAAkB,IAAIC,OAAO,yBACnCD,EAAgBE,UAAY,SAAUC,GAClCL,EAAQK,EAAE1D,OAEduD,EAAgBI,YAAYV,KAIKW,CAAsBrB,KAAKsB,KAAKC,IACrE,IAAIC,EAAa,EACbC,EAAe,EACnBF,EAAQG,SAAQ,SAAUC,GACtBH,GAAcG,EAAO,GACrBF,GAAgBE,EAAO,MAE3B/D,EAAegE,SAAS,UACxB/D,EAAWH,EAAe8D,EAAa,WACvC3D,EAAWF,EAAiB,IAAM8D,EAAe,SAIzDjE,EAAE,UAAUsB,GAAG,UAAU,WACrB+C,KAAKC,MAAQtB,KAAKC,IAAID,KAAKuB,IAAIF,KAAKC,MAAO,GAAI","file":"../js/index.js","sourcesContent":["const gameSpecificCycleCounts = {\r\n    RB: [520, 564],\r\n    Y: [516, 560]\r\n}\r\nconst gameRoll2Counts = {\r\n    RB: 0,\r\n    Y: 152\r\n}\r\nconst roll2Counts = $('#roll2Counts').data('roll2counts');\r\nvar actualRateBar = $('.actualRateGroup');\r\nvar intendedRateBar = $('.intendedRateGroup');\r\nvar loadingSpinner = $('.spinner-border');\r\n\r\nfunction setRateBar(progressElement, percent) {\r\n    percent = parseFloat(percent).toFixed(2);\r\n    progressElement.find('p.rate').html(`${percent}%`);\r\n    progressElement.find('.progress-bar').css(\"width\", `${percent}%`).attr(\"aria-valuenow\", percent)[0].className = `progress-bar ${percent >= 50 ? 'bg-success' : 'bg-danger'}`;\r\n}\r\n\r\nfunction getJsonValue($element) {\r\n    return JSON.parse($element.val());\r\n}\r\n\r\nfunction getIntValue($element) {\r\n    return parseInt($element.val());\r\n}\r\n\r\n$('form button').on('click', function () {\r\n    loadingSpinner.removeClass('d-none');\r\n\r\n    var pokemon = getJsonValue($('#species'));\r\n    var game = $('#game').val();\r\n    if (game === \"RB\") {\r\n        if ([\"DRAGONAIR\", \"DRAGONITE\"].includes(pokemon.name)) {\r\n            pokemon.catchRate = 45;\r\n        }\r\n    }\r\n    var ball = getJsonValue($('#ball'));\r\n    var level = getIntValue($('#level'));\r\n    var currentHPPercent = getIntValue($('#hpRange'));\r\n    var status = $('#status').val();\r\n    var ballIndex;\r\n    if (ball.ballName === \"Poke Ball\") {\r\n        ballIndex = 2;\r\n    } else if (ball.ballName === \"Great Ball\") {\r\n        ballIndex = 1;\r\n    } else {\r\n        ballIndex = 0;\r\n    }\r\n\r\n    function createCatchRateWorker(hpDV) {\r\n        var maxHP = (((pokemon.baseHP + hpDV) * 2 * level / 100) >> 0) + level + 10;\r\n        var curHP = (maxHP * (currentHPPercent / 100)) >> 0;\r\n        var hpFactor = (((maxHP * 255) / ball.ballFactor) >> 0);\r\n        var currentHPModifier = (curHP / 4) >> 0;\r\n        if (currentHPModifier > 0) {\r\n            hpFactor = (hpFactor / currentHPModifier) >> 0;\r\n        }\r\n        hpFactor = Math.min(hpFactor, 255);\r\n        var catchRateData = {\r\n            \"catchRate\" : pokemon.catchRate,\r\n            \"ball\" : ball,\r\n            \"status\" : status,\r\n            \"hpFactor\" : hpFactor,\r\n            \"reroll1Count\" : gameSpecificCycleCounts[game][0],\r\n            \"reroll2Count\" : gameSpecificCycleCounts[game][1],\r\n            \"roll2Count\" : gameRoll2Counts[game] + roll2Counts[ballIndex][maxHP-1][currentHPModifier-1] + 48 * (status === 12) + 52 * (status === 25)\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            const catchRateWorker = new Worker('js/catchRateWorker.js');\r\n            catchRateWorker.onmessage = function (e) {\r\n                resolve(e.data);\r\n            }\r\n            catchRateWorker.postMessage(catchRateData);\r\n        });\r\n    }\r\n\r\n    Promise.all([...Array(16)].map((x, i) => createCatchRateWorker(i))).then(results => {\r\n        var actualRate = 0;\r\n        var intendedRate = 0;\r\n        results.forEach(function (result) {\r\n            actualRate += result[0];\r\n            intendedRate += result[1];\r\n        });\r\n        loadingSpinner.addClass('d-none');\r\n        setRateBar(actualRateBar, actualRate / 671088.64);\r\n        setRateBar(intendedRateBar, 100 * intendedRate / 16);\r\n    });\r\n});\r\n\r\n$('#level').on('change', function () {\r\n    this.value = Math.min(Math.max(this.value, 2), 70);\r\n});"]}