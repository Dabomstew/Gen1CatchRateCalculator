{"version":3,"sources":["main.js"],"names":["gameSpecificCycleCounts","RB","reroll1","reroll2","Y","click","actualSuccesses","pokemon","JSON","parse","$","val","parseInt","currentHPPercent","Math","max","status","roll2Cycles","reroll1Cycles","game","intendedRate","hpDV","ball","maxHP","baseHP","level","hpFactor","ballFactor","currentHPModifier","reroll2Cycles","ballRerollCutoff","min","catchRate","initialRNGByte","initialDividerWord","currentDividerWord","currentRNGByte","catchMon","$element","percent","css","concat","attr","html","toFixed","setRateBar","parseFloat"],"mappings":"aAAA,IAAIA,wBAA0B,CAACC,GAAI,CAAEC,QAAS,IAAKC,QAAS,KACxDC,EAAG,CAAEF,QAAS,IAAKC,QAAS,MAD5BH,YAAAA,MAAiCE,EAAAA,UAAOG,MAAT,WAO/B,IAP+CF,IAAAA,EAAS,EAA9BG,EAAA,EACvBC,EAAAC,KAAAC,MAAAC,EAAA,YAAAC,OAAET,EAASM,KAAXC,MAAAC,EAAA,SAAAC,OAAgBR,EAASS,SAAAF,EAAA,UAAAC,OAAzBE,EAAAC,KAAAC,IAAAH,SAAAF,EAAA,YAAAC,OAAA,GADPK,EAAAN,EAAA,WAAAC,MAEIM,EAAWP,EAAA,SAAfC,MAEEO,EAAgBlB,wBAAYmB,GAAAjB,QACtBkB,EAAJpB,wBAAAmB,GAAAhB,QAEWkB,EAAO,EAACZ,EAAQ,GAAAY,IAAYV,CACnCW,IAAIC,GAAR,GAAWhB,EAAaiB,OAAbH,GAAXI,EAAA,KAAA,GAAAA,EAAA,GACSC,EAAY,IAAEH,EAAvBD,EAAAK,YAAA,EACId,GAA4BD,GAAUC,EAAnB,MAAvB,GAAA,GAAA,EACa,EAAHe,IACFF,EAAcf,EAAtBiB,GAAA,GAEIC,EAAaf,KAAGd,IAAAA,EAAAA,KAUhBoB,GAAgBJ,EAASM,EAAKQ,iBAAmBhB,KAAKiB,IAAIxB,EAAQyB,UAAY,EAAGV,EAAKQ,iBAAmBd,GAAUM,EAAKQ,kBAAoBJ,EAAW,GAAK,IAR3J,IAAIL,IAAIY,EAAiBZ,EAAIY,EAAI,IAAAA,IAC9BV,GAAQU,EAAGjB,EACHV,GAAqBgB,WAWzB,IAAK,IAAIY,EAAqB,EAAGA,EAAqB,MAAOA,GAAsB,EAAG,CAN9EH,IAHZH,IAEHO,EAAAD,EAWeE,EAAiBH,EATjBjB,EAAcc,GAAwBC,IAAL,GAAoC,IAYjET,EAAKpB,SAA4B,IAAjBkC,GAXbD,EAAuBA,EAA9CjB,EAAqE,OACpC,MAEtBI,EAAAnB,SAAA,IAAAiC,KACMF,EAAwBA,EAA4BA,EAAkB,OAC3E,KAcS5B,KAKL8B,EAAiB7B,EAAQyB,aAThBV,EAAgBc,IAFZD,EAATA,EAAAlB,YAAA,SAE2C,GAAA,MACHS,EAGvC,EAAA,GAMLW,SAAAA,EAAWC,EAAXC,GACHD,EAAME,IAAA,QAAN,GAAAC,OAAMF,EAAN,MAAMG,KAAA,gBAAAH,GAAAI,KAAN,GAAAF,OAAMF,EAAN,MACGJ,EAAAA,GAAAA,UAAAA,gBAAAA,OAA2ClB,IAArBkB,EAAqBlB,aAA3C,aAEAoB,EAAAA,EAAAA,eAAWD,WAAkBV,EAA7B,WAAAkB,QAAA,IACHC,EAAAnC,EAAA,iBAAAoC,WAAA,IAAA1B,EAAA,IAAAwB,QAAA","file":"../js/main.js","sourcesContent":["var gameSpecificCycleCounts = {RB: { reroll1: 520, reroll2: 564},\r\n    Y: { reroll1: 516, reroll2: 560}}\r\nvar roll2Cycles = 23664;\r\n\r\n$('button').click(function () {\r\n    var intendedRate = 0;\r\n    var actualSuccesses = 0;\r\n    var pokemon = JSON.parse($('#species').val());\r\n    var ball = JSON.parse($('#ball').val());\r\n    var level = parseInt($('#level').val());\r\n    var currentHPPercent = Math.max(parseInt($('#hpRange').val()), 1);\r\n    var status = $('#status').val();\r\n    var game = $('#game').val();\r\n    var reroll1Cycles = gameSpecificCycleCounts[game].reroll1;\r\n    var reroll2Cycles = gameSpecificCycleCounts[game].reroll2;\r\n\r\n    for (var hpDV = 0; hpDV < 16; hpDV++) {\r\n        var maxHP = (((pokemon.baseHP + hpDV) * 2 * level / 100) >> 0) + level + 10;\r\n        var hpFactor = (((maxHP * 255) / ball.ballFactor) >> 0);\r\n        var currentHPModifier = (((maxHP * (currentHPPercent / 100)) >> 0) / 4) >> 0;\r\n        if (currentHPModifier > 0) {\r\n            hpFactor = (hpFactor / currentHPModifier) >> 0;\r\n        }\r\n        hpFactor = Math.min(hpFactor, 255);\r\n        intendedRate += status / ball.ballRerollCutoff + Math.min(pokemon.catchRate + 1, ball.ballRerollCutoff - status) / ball.ballRerollCutoff * (hpFactor + 1) / 256;\r\n        for (var initialRNGByte = 0; initialRNGByte < 256; initialRNGByte++) {\r\n            if (initialRNGByte < status) {\r\n                actualSuccesses += 16384;\r\n            } else {\r\n                for (var initialDividerWord = 0; initialDividerWord < 65536; initialDividerWord += 4) {\r\n                    var catchMon = true;\r\n                    var reroll = false;\r\n                    var currentDividerWord = initialDividerWord;\r\n                    var currentRNGByte = initialRNGByte;\r\n                    do {\r\n                        currentRNGByte = (currentRNGByte + (currentDividerWord >>> 8)) & 0xFF;\r\n                        if (ball.reroll1 && currentRNGByte > 200) {\r\n                            currentDividerWord = (currentDividerWord + reroll1Cycles) & 0xFFFF;\r\n                            reroll = true;\r\n                        }\r\n                        else if (ball.reroll2 && currentRNGByte > 150) {\r\n                            currentDividerWord = (currentDividerWord + reroll2Cycles) & 0xFFFF;\r\n                            reroll = true;\r\n                        }\r\n                        else {\r\n                            reroll = false;\r\n                        }\r\n                    }\r\n                    while (reroll);\r\n                    if (currentRNGByte > pokemon.catchRate) {\r\n                        catchMon = false;\r\n                    } else {\r\n                        currentDividerWord = (currentDividerWord + roll2Cycles) & 0xFFFF;\r\n                        currentRNGByte = (currentRNGByte + (currentDividerWord >>> 8)) & 0xFF;\r\n                        catchMon = currentRNGByte <= hpFactor;\r\n                    }\r\n                    actualSuccesses += catchMon ? 1 : 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function setRateBar($element, percent) {\r\n        $element.css(\"width\", `${percent}%`).attr(\"aria-valuenow\", percent).html(`${percent}%`);\r\n        $element[0].className = `progress-bar ${percent >= 50 ? 'bg-success' : 'bg-danger'}`\r\n    }\r\n    setRateBar($('#actualRate'), parseFloat(actualSuccesses / 671088.64).toFixed(2));\r\n    setRateBar($('#intendedRate'), parseFloat(100 * intendedRate / 16).toFixed(2));\r\n});"]}