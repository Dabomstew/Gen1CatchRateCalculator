{"version":3,"sources":["main.js"],"names":["gameSpecificCycleCounts","RB","reroll1","reroll2","progressBarClass","percent","progressBar","$","concat","css","attr","html","className","loadingSpinner","intendedRate","actualSuccesses","JSON","parse","val","ball","parseInt","removeClass","setTimeout","Math","max","recalcCatchRate","game","includes","pokemon","name","currentHPPercent","hpDV","status","maxHP","baseHP","level","hpFactor","ballFactor","currentHPModifier","min","ballRerollCutoff","catchRate","reroll1Cycles","initialRNGByte","reroll2Cycles","initialDividerWord","currentDividerWord","currentRNGByte","roll2Cycles","toFixed","setRateBar","on"],"mappings":"aAAA,IAAIA,wBAA0B,CAC1BC,GAAI,CAAEC,QAAS,IAAKC,QAAS,KAD7BH,EAAAA,CAAAA,QAAAA,IAAAA,QAA0B,MACpBE,YAAF,MAAgBC,SAAAA,WAASC,EAAAC,GADH,IAAAC,EAAAC,EAAA,IAAAC,OAAAJ,IAEzBE,EAAEG,IAAA,QAAF,GAAAD,OAAEH,EAAF,MAAEK,KAAA,gBAAAL,GAAEH,EAAAA,IAAAA,OAAAA,IAAFS,KAAET,GAAAA,OAAFG,EAAEH,MAAcC,EAAS,GAAAS,UAATT,gBAAAA,OAAS,IAAAE,EAAA,aAAA,aAFF,IAA9BQ,eAAAN,EAAA,mBASID,SAAAA,kBACH,IAAAQ,EAAA,EAUOC,EAAkB,EATtBF,EAAcG,KAAKC,MAAAV,EAAA,YAAvBW,OAEEC,EAAaH,KAAAC,MAASV,EAAA,SAAYW,OAChCL,EAAcO,SAACC,EAAAA,UAAfH,OACAI,EAAuBC,KAAAC,IAAAJ,SAAAb,EAAA,YAAAW,OAAA,GAACO,EAAAA,EAAe,WAAAP,MAA7BQ,EAAVnB,EAAA,SAAAW,MAFJ,OAAAQ,GAeY,CAAC,YAAa,aAAaC,SAASC,EAAQC,QAV/CJ,EAAAA,UAAkB,IAMvB,IAHA,IAAIG,EAAeX,wBAAnBS,GAAAxB,QACIiB,EAAkBZ,wBAAtBmB,GAAAvB,QAEI2B,EAAAA,EAAgBC,EAAQP,GAAIJ,IAAQ,CACpCY,IAAMC,GAAV,GAAeL,EAAFM,OAAbH,GAAAI,EAAA,KAAA,GAAAA,EAAA,GACQC,EAAR,IAAsBlB,EAAtBC,EAAAkB,YAAA,EAYQC,GAAuBL,GAASH,EAAmB,MAAS,GAAK,GAAM,EAX5D,EAAXQ,IACCF,EAAaA,EAAaT,GAA/B,GAECS,EAAAb,KAAAgB,IAAAH,EAAA,KACJtB,GAAAkB,EAAAb,EAAAqB,iBAAAjB,KAAAgB,IAAAX,EAAAa,UAAA,EAAAtB,EAAAqB,iBAAAR,GAAAb,EAAAqB,kBAAAJ,EAAA,GAAA,IAaGrB,GAAmB,MAAQiB,EAZ3BU,IAAAA,IAAAA,EAAgB1C,EAAAA,EAApB,IAAA2C,IACIC,IAAAA,IAAaC,EAAG7C,EAAuB6C,EAA3C,MAAAA,GAAA,EAAA,CAGgB,IAWJ,IAAIC,EAAqBD,EAZrCE,EAAkCJ,IAG1BL,GADcL,EAAoBI,GAAtCS,IAAA,GAAA,IACIR,EAAuBL,SAA4B,IAAnBH,EAcpBgB,EAAsBA,EAAqBJ,EAAiB,UAZpD,CAAA,KAAGJ,EAAAA,SAAvB,IAAWS,GAEKX,MADnBU,EAAAA,EAAAF,EAAA,MAIQD,GAAyBA,EAAAA,YAGtBI,IADAD,EAAqBD,IADpBA,EAAwBA,EAAqBG,YAAOH,SACzD,GAAA,MACAT,EAAA,EAAA,IAGIvB,eAASX,SAAL,UACA4C,WAAAA,aAAAA,WAAsBA,EAAqBJ,WAAtBO,QAArB,IACHC,WAFD,eAGc/C,WAAW4C,IAAAA,EAAsB,IAAAE,QAAA,IAzCnE1C,EAAE,UAAU4C,GAAG,QAAS,WARxBtC,eAAAQ,YAAoBjB,UAChBkB,WAAIhB,WAAemB,mBAAKrB","file":"../js/main.js","sourcesContent":["var gameSpecificCycleCounts = {\r\n    RB: { reroll1: 520, reroll2: 564 },\r\n    Y: { reroll1: 516, reroll2: 560 }\r\n}\r\nvar roll2Cycles = 23664;\r\nfunction setRateBar(progressBarClass, percent) {\r\n    var progressBar = $(`#${progressBarClass}`);\r\n    progressBar.css(\"width\", `${percent}%`).attr(\"aria-valuenow\", percent);\r\n    $(`.${progressBarClass}`).html(`${percent}%`);\r\n    progressBar[0].className = `progress-bar ${percent >= 50 ? 'bg-success' : 'bg-danger'}`\r\n}\r\nvar loadingSpinner = $('.spinner-border');\r\n\r\n$('button').on('click', function () {\r\n    loadingSpinner.removeClass('d-none');\r\n    setTimeout(function () {recalcCatchRate()}, 100);\r\n});\r\n\r\nfunction recalcCatchRate() {\r\n    var intendedRate = 0;\r\n    var actualSuccesses = 0;\r\n    var pokemon = JSON.parse($('#species').val());\r\n    var ball = JSON.parse($('#ball').val());\r\n    var level = parseInt($('#level').val());\r\n    var currentHPPercent = Math.max(parseInt($('#hpRange').val()), 1);\r\n    var status = $('#status').val();\r\n    var game = $('#game').val();\r\n    if (game === \"RB\") {\r\n        if ([\"DRAGONAIR\", \"DRAGONITE\"].includes(pokemon.name)) {\r\n            pokemon.catchRate = 45;\r\n        }\r\n    }\r\n    var reroll1Cycles = gameSpecificCycleCounts[game].reroll1;\r\n    var reroll2Cycles = gameSpecificCycleCounts[game].reroll2;\r\n\r\n    for (var hpDV = 0; hpDV < 16; hpDV++) {\r\n        var maxHP = (((pokemon.baseHP + hpDV) * 2 * level / 100) >> 0) + level + 10;\r\n        var hpFactor = (((maxHP * 255) / ball.ballFactor) >> 0);\r\n        var currentHPModifier = (((maxHP * (currentHPPercent / 100)) >> 0) / 4) >> 0;\r\n        if (currentHPModifier > 0) {\r\n            hpFactor = (hpFactor / currentHPModifier) >> 0;\r\n        }\r\n        hpFactor = Math.min(hpFactor, 255);\r\n        intendedRate += status / ball.ballRerollCutoff + Math.min(pokemon.catchRate + 1, ball.ballRerollCutoff - status) / ball.ballRerollCutoff * (hpFactor + 1) / 256;\r\n        actualSuccesses += 16384 * status;\r\n        for (var initialRNGByte = status; initialRNGByte < 256; initialRNGByte++) {\r\n            for (var initialDividerWord = 0; initialDividerWord < 65536; initialDividerWord += 4) {\r\n                var currentDividerWord = initialDividerWord;\r\n                var currentRNGByte = initialRNGByte;\r\n                do {\r\n                    currentRNGByte = (currentRNGByte + (currentDividerWord >>> 8)) & 0xFF;\r\n                    if (ball.reroll1 && currentRNGByte > 200) {\r\n                        currentDividerWord = (currentDividerWord + reroll1Cycles) & 0xFFFF;\r\n                    }\r\n                    else if (ball.reroll2 && currentRNGByte > 150) {\r\n                        currentDividerWord = (currentDividerWord + reroll2Cycles) & 0xFFFF;\r\n                    } else {\r\n                        break;\r\n                    }\r\n                }\r\n                while (true);\r\n                if (currentRNGByte <= pokemon.catchRate) {\r\n                    currentDividerWord = (currentDividerWord + roll2Cycles) & 0xFFFF;\r\n                    currentRNGByte = (currentRNGByte + (currentDividerWord >>> 8)) & 0xFF;\r\n                    actualSuccesses += currentRNGByte <= hpFactor ? 1 : 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    loadingSpinner.addClass('d-none');\r\n    setRateBar('actualRate', parseFloat(actualSuccesses / 671088.64).toFixed(2));\r\n    setRateBar('intendedRate', parseFloat(100 * intendedRate / 16).toFixed(2));\r\n}"]}