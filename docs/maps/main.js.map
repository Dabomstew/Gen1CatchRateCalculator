{"version":3,"sources":["main.js"],"names":["gameSpecificCycleCounts","RB","reroll1","reroll2","Y","actualRateBar","$","intendedRateBar","loadingSpinner","setRateBar","progressElement","percent","find","html","css","attr","className","on","removeClass","pokemon","JSON","parse","val","ball","level","parseInt","currentHPPercent","status","game","includes","name","catchRate","reroll1Cycles","reroll2Cycles","Promise","all","Array","map","x","i","createCatchRateWorker","hpDV","resolve","reject","catchRateWorker","Worker","onmessage","e","data","postMessage","then","results","actualRate","intendedRate","forEach","result","addClass","parseFloat","toFixed","this","value"],"mappings":"AAAA,MAAMA,EAA0B,CAC5BC,GAAI,CAAEC,QAAS,IAAKC,QAAS,KAC7BC,EAAG,CAAEF,QAAS,IAAKC,QAAS,MAEhC,IAAIE,EAAgBC,EAAE,oBAClBC,EAAkBD,EAAE,sBACpBE,EAAiBF,EAAE,mBAEvB,SAASG,EAAWC,EAAiBC,GACjCD,EAAgBE,KAAK,UAAUC,KAAQF,EAAH,KACpCD,EAAgBE,KAAK,iBAAiBE,IAAI,QAAYH,EAAH,KAAeI,KAAK,gBAAiBJ,GAAS,GAAGK,UAAY,iBAAgBL,GAAW,GAAK,aAAe,aAGnKL,EAAE,UAAUW,GAAG,SAAS,WACpBT,EAAeU,YAAY,UAC3B,IAAIC,EAAUC,KAAKC,MAAMf,EAAE,YAAYgB,OACnCC,EAAOH,KAAKC,MAAMf,EAAE,SAASgB,OAC7BE,EAAQC,SAASnB,EAAE,UAAUgB,OAC7BI,EAAmBD,SAASnB,EAAE,YAAYgB,OAC1CK,EAASrB,EAAE,WAAWgB,MACtBM,EAAOtB,EAAE,SAASgB,MACT,OAATM,GACI,CAAC,YAAa,aAAaC,SAASV,EAAQW,QAC5CX,EAAQY,UAAY,IAG5B,IAAIC,EAAgBhC,EAAwB4B,GAAM1B,QAC9C+B,EAAgBjC,EAAwB4B,GAAMzB,QAYlD+B,QAAQC,IAAI,IAAIC,MAAM,KAAKC,IAAI,CAACC,EAAGC,KAAMC,OAVVC,EAUgCF,EATpD,IAAIL,QAAQ,CAACQ,EAASC,KACzB,MAAMC,EAAkB,IAAIC,OAAO,yBACnCD,EAAgBE,UAAY,SAAUC,GAClCL,EAAQK,EAAEC,OAEdJ,EAAgBK,YAAY,CAAC9B,EAASI,EAAMC,EAAOE,EAAkBC,EAAQK,EAAeC,EAAeQ,MANnH,IAA+BA,KAUqCS,KAAKC,IACrE,IAAIC,EAAa,EACbC,EAAe,EACnBF,EAAQG,SAAQ,SAAUC,GACtBH,GAAcG,EAAO,GACrBF,GAAgBE,EAAO,MAE3B/C,EAAegD,SAAS,UACxB/C,EAAWJ,EAAeoD,WAAWL,EAAa,WAAWM,QAAQ,IACrEjD,EAAWF,EAAiBkD,WAAW,IAAMJ,EAAe,IAAIK,QAAQ,SAIhFpD,EAAE,UAAUW,GAAG,UAAU,WACjB0C,KAAKC,MAAQ,IAAGD,KAAKC,MAAQ,GAC7BD,KAAKC,MAAQ,MAAKD,KAAKC,MAAQ","file":"../js/main.js","sourcesContent":["const gameSpecificCycleCounts = {\r\n    RB: { reroll1: 520, reroll2: 564 },\r\n    Y: { reroll1: 516, reroll2: 560 }\r\n}\r\nvar actualRateBar = $('.actualRateGroup');\r\nvar intendedRateBar = $('.intendedRateGroup');\r\nvar loadingSpinner = $('.spinner-border');\r\n\r\nfunction setRateBar(progressElement, percent) {\r\n    progressElement.find('p.rate').html(`${percent}%`);\r\n    progressElement.find('.progress-bar').css(\"width\", `${percent}%`).attr(\"aria-valuenow\", percent)[0].className = `progress-bar ${percent >= 50 ? 'bg-success' : 'bg-danger'}`;\r\n}\r\n\r\n$('button').on('click', function () {\r\n    loadingSpinner.removeClass('d-none');\r\n    var pokemon = JSON.parse($('#species').val());\r\n    var ball = JSON.parse($('#ball').val());\r\n    var level = parseInt($('#level').val());\r\n    var currentHPPercent = parseInt($('#hpRange').val());\r\n    var status = $('#status').val();\r\n    var game = $('#game').val();\r\n    if (game === \"RB\") {\r\n        if ([\"DRAGONAIR\", \"DRAGONITE\"].includes(pokemon.name)) {\r\n            pokemon.catchRate = 45;\r\n        }\r\n    }\r\n    var reroll1Cycles = gameSpecificCycleCounts[game].reroll1;\r\n    var reroll2Cycles = gameSpecificCycleCounts[game].reroll2;\r\n\r\n    function createCatchRateWorker(hpDV) {\r\n        return new Promise((resolve, reject) => {\r\n            const catchRateWorker = new Worker('js/catchRateWorker.js');\r\n            catchRateWorker.onmessage = function (e) {\r\n                resolve(e.data);\r\n            }\r\n            catchRateWorker.postMessage([pokemon, ball, level, currentHPPercent, status, reroll1Cycles, reroll2Cycles, hpDV]);\r\n        });\r\n    }\r\n\r\n    Promise.all([...Array(16)].map((x, i) => createCatchRateWorker(i))).then(results => {\r\n        var actualRate = 0;\r\n        var intendedRate = 0;\r\n        results.forEach(function (result) {\r\n            actualRate += result[0];\r\n            intendedRate += result[1];\r\n        });\r\n        loadingSpinner.addClass('d-none');\r\n        setRateBar(actualRateBar, parseFloat(actualRate / 671088.64).toFixed(2));\r\n        setRateBar(intendedRateBar, parseFloat(100 * intendedRate / 16).toFixed(2));\r\n    });\r\n});\r\n\r\n$('#level').on('change', function () {\r\n    if (this.value < 1) this.value = 1;\r\n    if (this.value > 100) this.value = 100;\r\n});"]}