{"version":3,"sources":["main.js"],"names":["ballFactor","reroll1","safariUltraBall","reroll2","pokeBall","greatBall","yellowReroll150","actualSuccesses","$","redReroll200","redReroll150","JSON","parse","val","yellowReroll200","pokemon","catchRate","baseHP","r2RollCycles","parseInt","r1Reroll200Cycles","r1Reroll150Cycles","intendedRate","game","doReroll200","ball","click","level","ballRerollNumber","Math","max","doReroll150","includes","statusLabel","hpDV","maxHP","currentHPPercent","hpFactor","currentHPModifier","min","status","ihra","idivstate","catchMon","divstate","hra","setRateBar","percent","html","reroll","className","parseFloat","toFixed"],"mappings":"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","file":"../js/main.js","sourcesContent":["var pokeBall = { ballFactor: 12, reroll1: false, reroll2: false };\r\nvar greatBall = { ballFactor: 8, reroll1: true, reroll2: false };\r\nvar safariUltraBall = { ballFactor: 12, reroll1: true, reroll2: true };\r\nvar redReroll200 = 520;\r\nvar redReroll150 = 564;\r\nvar yellowReroll200 = 516;\r\nvar yellowReroll150 = 560;\r\nvar r2RollCycles = 23664;\r\nvar r1Reroll200Cycles;\r\nvar r1Reroll150Cycles;\r\nvar intendedRate = 0;\r\nvar actualSuccesses = 0;\r\nvar doReroll150;\r\nvar doReroll200;\r\nvar ballFactor;\r\nvar ballRerollNumber;\r\n\r\n$('button').click(function () {\r\n    var pokemon = JSON.parse($('#species').val());\r\n    var catchRate = pokemon.catchRate;\r\n    var baseHP = pokemon.baseHP;\r\n    var level = parseInt($('#level').val());\r\n    var game = $('#game').val();\r\n    if (game === \"RB\") {\r\n        r1Reroll200Cycles = redReroll200;\r\n        r1Reroll150Cycles = redReroll150;\r\n    } else if (game === \"Y\") {\r\n        r1Reroll200Cycles = yellowReroll200;\r\n        r1Reroll150Cycles = yellowReroll150;\r\n    }\r\n    var ball = $('#ball').val();\r\n    if (ball === \"pokeBall\") {\r\n        doReroll150 = pokeBall.reroll1;\r\n        doReroll200 = pokeBall.reroll2;\r\n        ballFactor = pokeBall.ballFactor;\r\n        ballRerollNumber = 256;\r\n    } else if (ball === \"greatBall\") {\r\n        doReroll150 = greatBall.reroll1;\r\n        doReroll200 = greatBall.reroll2;\r\n        ballFactor = greatBall.ballFactor;\r\n        ballRerollNumber = 201;\r\n    } else if (ball === \"ultraBall\" || ball === \"safariBall\") {\r\n        doReroll150 = safariUltraBall.reroll1;\r\n        doReroll200 = safariUltraBall.reroll2;\r\n        ballFactor = safariUltraBall.ballFactor;\r\n        ballRerollNumber = 151;\r\n    }\r\n    var currentHPPercent = Math.max(parseInt($('#hpRange').val()), 1);\r\n    var statusLabel = $('#status').val();\r\n    var status = 0;\r\n    if ([\"poisoned\", \"burned\", \"paralyzed\"].includes(statusLabel)) {\r\n        status = 12;\r\n    } else if ([\"asleep\", \"frozen\"].includes(statusLabel)) {\r\n        status = 25;\r\n    }\r\n\r\n    for (var hpDV = 0; hpDV < 16; hpDV++) {\r\n        var maxHP = (((baseHP + hpDV) * 2 * level / 100) >> 0) + level + 10;\r\n        var hpFactor = (((maxHP * 255) / ballFactor) >> 0);\r\n        var currentHPModifier = (((maxHP * (currentHPPercent / 100)) >> 0) / 4) >> 0;\r\n        if (currentHPModifier > 0) {\r\n            hpFactor = (hpFactor / currentHPModifier) >> 0;\r\n        }\r\n        hpFactor = Math.min(hpFactor, 255);\r\n        intendedRate += status / ballRerollNumber + Math.min(catchRate + 1, ballRerollNumber - status) / ballRerollNumber * (hpFactor + 1) / 256;\r\n        for (var ihra = 0; ihra < 256; ihra++) {\r\n            if (ihra < status) {\r\n                actualSuccesses += 16384;\r\n            } else {\r\n                for (var idivstate = 0; idivstate < 65536; idivstate += 4) {\r\n                    var catchMon = true;\r\n                    var reroll = false;\r\n                    var divstate = idivstate;\r\n                    var hra = ihra;\r\n                    do {\r\n                        hra = (hra + (divstate >>> 8)) & 0xFF;\r\n                        if (doReroll200 && hra > 200) {\r\n                            divstate = (divstate + r1Reroll200Cycles) & 0xFFFF;\r\n                            reroll = true;\r\n                        }\r\n                        else if (doReroll150 && hra > 150) {\r\n                            divstate = (divstate + r1Reroll150Cycles) & 0xFFFF;\r\n                            reroll = true;\r\n                        }\r\n                        else {\r\n                            reroll = false;\r\n                        }\r\n                    }\r\n                    while (reroll);\r\n                    if (hra > catchRate) {\r\n                        catchMon = false;\r\n                    } else {\r\n                        divstate = (divstate + r2RollCycles) & 0xFFFF;\r\n                        hra = (hra + (divstate >>> 8)) & 0xFF;\r\n                        catchMon = hra <= hpFactor;\r\n                    }\r\n                    actualSuccesses += catchMon ? 1 : 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function setRateBar($element, percent) {\r\n        $element.css(\"width\", `${percent}%`).attr(\"aria-valuenow\", percent).html(`${percent}%`);\r\n        $element[0].className = `progress-bar ${percent >= 50 ? 'bg-success' : 'bg-danger'}`\r\n    }\r\n    setRateBar($('#actualRate'), parseFloat(actualSuccesses / 671088.64).toFixed(2));\r\n    setRateBar($('#intendedRate'), parseFloat(100 * intendedRate / 16).toFixed(2));\r\n    actualSuccesses = 0;\r\n    intendedRate = 0;\r\n});"]}